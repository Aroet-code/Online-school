// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function checkAuth() {
    const user = JSON.parse(localStorage.getItem('user'));
    const authButtons = document.getElementById('authButtons');
    const userInfo = document.getElementById('userInfo');
    
    if (user) {
        authButtons.style.display = 'none';
        userInfo.style.display = 'flex';
        document.getElementById('userName').textContent = user.username;
        document.getElementById('userBalance').textContent = `${user.wallet} ‚ÇΩ`;
    }
}

// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
function logout() {
    localStorage.removeItem('user');
    location.reload();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤
async function loadCourses() {
    const coursesContainer = document.getElementById('coursesContainer');
    
    try {
        coursesContainer.innerHTML = '<div class="loading">üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...</div>';
        
        const response = await fetch('http://localhost:8080/api/courses');
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const courses = await response.json();
        
        if (courses.length === 0) {
            coursesContainer.innerHTML = '<div class="loading">üòï –ö—É—Ä—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
            return;
        }
        
        displayCourses(courses);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤:', error);
        coursesContainer.innerHTML = `
            <div class="error">
                <p>‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É—Ä—Å—ã</p>
                <p><strong>–û—à–∏–±–∫–∞:</strong> ${error.message}</p>
                <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: </p>
                <ul>
                    <li>–ó–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–∞ localhost:8080</li>
                    <li>–î–æ—Å—Ç—É–ø–µ–Ω –ª–∏ API: <a href="http://localhost:8080/api/courses" target="_blank">/api/courses</a></li>
                </ul>
                <button onclick="location.reload()">üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
            </div>
        `;
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤
function displayCourses(courses) {
    const coursesContainer = document.getElementById('coursesContainer');
    
    coursesContainer.innerHTML = courses.map(course => `
        <div class="language-card ${course.language}-card">
            <div class="language-header">
                <div style="display: flex; align-items: center; flex: 1;">
                    <div class="language-icon">${getLanguageEmoji(course.language)}</div>
                    <div class="language-title">
                        <h2>${course.title}</h2>
                    </div>
                </div>
                <span class="difficulty ${course.language}">${getDifficulty(course.language)}</span>
            </div>
            
            <div class="language-content">
                <p class="purpose">${getLanguageDescription(course.language)}</p>
                
                <div class="price-container">
                    <div class="price-amount">${course.price}</div>
                    <div class="price-currency">—Ä—É–±.</div>
                </div>
            </div>
            
            <div class="course-actions">
                <a href="purchase.html?course_id=${course.id}" class="btn-buy">
                    üí∞ –ö—É–ø–∏—Ç—å
                </a>
                <a href="trial.html?course_id=${course.id}" class="btn-trial">
                    üëÄ –¢—Ä–∏–∞–ª
                </a>
            </div>
        </div>
    `).join('');
}

// Emoji –¥–ª—è —è–∑—ã–∫–æ–≤
function getLanguageEmoji(language) {
    const emojis = {
        'go': 'üêπ',
        'python': 'üêç', 
        'csharp': 'üî∑'
    };
    return emojis[language] || 'üéì';
}

// –°–ª–æ–∂–Ω–æ—Å—Ç—å –∫—É—Ä—Å–∞
function getDifficulty(language) {
    const difficulties = {
        'go': '–°—Ä–µ–¥–Ω–∏–π',
        'python': '–ù–∞—á–∞–ª—å–Ω—ã–π',
        'csharp': '–°—Ä–µ–¥–Ω–∏–π'
    };
    return difficulties[language] || '–ù–∞—á–∞–ª—å–Ω—ã–π';
}

// –û–ø–∏—Å–∞–Ω–∏–µ —è–∑—ã–∫–∞
function getLanguageDescription(language) {
    const descriptions = {
        'go': 'Go (Golang) - –∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º—ã–π —è–∑—ã–∫ –æ—Ç Google —Å —É–ø–æ—Ä–æ–º –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤.',
        'python': 'Python - –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º—ã–π —è–∑—ã–∫ —Å —á–∏—Å—Ç—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º. –ü–æ–ø—É–ª—è—Ä–µ–Ω –≤ data science, –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–µ.',
        'csharp': 'C# - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ –æ—Ç Microsoft. –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ desktop, web, mobile –∏ –∏–≥—Ä –Ω–∞ Unity.'
    };
    return descriptions[language] || '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    checkAuth();
    loadCourses();
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.logout = logout;
window.loadCourses = loadCourses;